new entry "Mobile_PassiveBonuses"
type "PassiveData"
using "Mobile_PassiveBonuses"
data "DisplayName" "h645f2cb5gd544g4845g9fabg5760ebeea165;1"
data "Description" "hde62b0dfg18e2g4126g94cag3b136d212d0b;1"
data "DescriptionParams" "Distance(3);1"
data "Icon" "PassiveFeature_FastMovement"
data "StatsFunctorContext" "OnCast"
data "Conditions" "SpellId('Shout_Dash') and not Tagged('EXTRA_ATTACK_BLOCKED',context.Source) and TurnBased(context.Source)"
data "StatsFunctors" "IF(not HasHigherPriorityExtraAttackQueued('WILDSTRIKE_2_EXTRA_ATTACK_Q') and not HasAnyExtraAttack()):ApplyStatus(SELF,SYR_FEAT_MOBILE_EXTRA_ATTACK,100,1);IF(HasHigherPriorityExtraAttackQueued('WILDSTRIKE_2_EXTRA_ATTACK_Q') or HasAnyExtraAttack()):ApplyStatus(SELF,SYR_FEAT_MOBILE_EXTRA_ATTACK_Q,100,1)"

new entry "SYR_FEAT_MOBILE_EXTRA_ATTACK"
type "StatusData"
data "StatusType" "BOOST"
using "EXTRA_ATTACK"
data "StackId" "SYR_FEAT_MOBILE_EXTRA_ATTACK"
data "StackPriority" "10"
data "Boosts" "UnlockSpellVariant(ExtraAttackCheck(),ModifyUseCosts(Replace,ActionPoint,0,0,ActionPoint),ModifyIconGlow(),ModifyTooltipDescription())"
data "OnApplyFunctors" "IF(HasStatus('EXTRA_ATTACK_WAR_PRIEST')):ApplyStatus(EXTRA_ATTACK_WAR_PRIEST_Q);IF(HasStatus('EXTRA_ATTACK_WAR_PRIEST')):RemoveStatus(EXTRA_ATTACK_WAR_PRIEST)"
data "RemoveConditions" "ExtraAttackSpellCheck() and HasUseCosts('ActionPoint',false,context.Target) and not IsOffHandAttack()"
data "RemoveEvents" "OnSpellCast"
data "StatusPropertyFlags" "DisableCombatlog;DisablePortraitIndicator;DisableOverhead;ApplyToDead"

new entry "SYR_FEAT_MOBILE_EXTRA_ATTACK_Q"
type "StatusData"
data "StatusType" "BOOST"
using "EXTRA_ATTACK_Q"
data "StackId" "SYR_FEAT_MOBILE_EXTRA_ATTACK"
data "StackPriority" "5"
data "RemoveConditions" "not HasHigherPriorityExtraAttackQueued('WILDSTRIKE_2_EXTRA_ATTACK_Q') and not HasAnyExtraAttack()"
data "RemoveEvents" "OnStatusRemoved"
data "OnRemoveFunctors" "IF(RemoveCause(StatusRemoveCause.Condition)):ApplyStatus(SYR_FEAT_MOBILE_EXTRA_ATTACK,100,1);IF(RemoveCause(StatusRemoveCause.Condition) and HasStatus('EXTRA_ATTACK_WAR_PRIEST')):ApplyStatus(EXTRA_ATTACK_WAR_PRIEST_Q);IF(RemoveCause(StatusRemoveCause.Condition) and HasStatus('EXTRA_ATTACK_WAR_PRIEST')):RemoveStatus(EXTRA_ATTACK_WAR_PRIEST)"
data "StatusPropertyFlags" "DisableCombatlog;DisablePortraitIndicator;DisableOverhead;ApplyToDead"